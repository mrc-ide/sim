// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// add2
double add2(double a, double b);
RcppExport SEXP _sim_add2(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(add2(a, b));
    return rcpp_result_gen;
END_RCPP
}
// compute_pi_c
double compute_pi_c(int n);
RcppExport SEXP _sim_compute_pi_c(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_pi_c(n));
    return rcpp_result_gen;
END_RCPP
}
// my_sum1
double my_sum1(Rcpp::NumericVector x);
RcppExport SEXP _sim_my_sum1(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(my_sum1(x));
    return rcpp_result_gen;
END_RCPP
}
// my_sum2
double my_sum2(std::vector<double> x);
RcppExport SEXP _sim_my_sum2(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(my_sum2(x));
    return rcpp_result_gen;
END_RCPP
}
// my_cumulative_sum1
Rcpp::NumericVector my_cumulative_sum1(Rcpp::NumericVector x);
RcppExport SEXP _sim_my_cumulative_sum1(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(my_cumulative_sum1(x));
    return rcpp_result_gen;
END_RCPP
}
// my_cumulative_sum2
std::vector<double> my_cumulative_sum2(std::vector<double> x);
RcppExport SEXP _sim_my_cumulative_sum2(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(my_cumulative_sum2(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sim_add2", (DL_FUNC) &_sim_add2, 2},
    {"_sim_compute_pi_c", (DL_FUNC) &_sim_compute_pi_c, 1},
    {"_sim_my_sum1", (DL_FUNC) &_sim_my_sum1, 1},
    {"_sim_my_sum2", (DL_FUNC) &_sim_my_sum2, 1},
    {"_sim_my_cumulative_sum1", (DL_FUNC) &_sim_my_cumulative_sum1, 1},
    {"_sim_my_cumulative_sum2", (DL_FUNC) &_sim_my_cumulative_sum2, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_sim(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
